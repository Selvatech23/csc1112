Private Sub cmdReport_Click()
    On Error GoTo GenericErrHandler

    Dim conn As Object, rs As Object
    Dim dbPath As String, reportPath As String, fileName As String
    Dim reportDate As Date
    Dim xlApp As Object, xlBook As Object, xlSheet1 As Object, xlSheet2 As Object
    Dim outlookApp As Object, mailItem As Object
    
    ' --- 1. SETUP AND PATH VALIDATION ---
    dbPath = "F:\selva\CDD-NWM\Macro\CompanyData.accdb"
    reportPath = "F:\selva\CDD-NWM\Macro\"
    reportDate = Date - 1

    ' **CRITICAL CHECK 1: Database Path**
    If Dir(dbPath) = "" Then
        MsgBox "Error: Database file not found." & vbCrLf & _
               "Please check this path is correct:" & vbCrLf & dbPath, vbCritical, "File Not Found"
        Exit Sub
    End If

    ' **CRITICAL CHECK 2: Report Folder Path**
    If Dir(reportPath, vbDirectory) = "" Then
        MsgBox "Error: The folder to save the report in does not exist." & vbCrLf & _
               "Please check this folder path is correct:" & vbCrLf & reportPath, vbCritical, "Folder Not Found"
        Exit Sub
    End If

    ' --- 2. FETCH DATA FROM ACCESS ---
    Set conn = CreateObject("ADODB.Connection")
    conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & dbPath

    Set rs = conn.Execute("SELECT * FROM CompanyRecords WHERE SubmissionDate <= #" & Format(reportDate, "mm/dd/yyyy") & "#")

    If rs.EOF Then
        MsgBox "No data available for the report period (up to " & Format(reportDate, "dd-mmm-yyyy") & ").", vbInformation
        rs.Close
        conn.Close
        Set rs = Nothing
        Set conn = Nothing
        Exit Sub
    End If

    ' --- 3. CREATE AND POPULATE EXCEL ---
    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False
    Set xlBook = xlApp.Workbooks.Add
    Set xlSheet1 = xlBook.Sheets(1)
    xlSheet1.Name = "RawData"

    ' Headers
    Dim i As Long
    For i = 0 To rs.Fields.Count - 1
        xlSheet1.Cells(1, i + 1).Value = rs.Fields(i).Name
    Next i
    
    ' Data
    xlSheet1.Cells(2, 1).CopyFromRecordset rs
    rs.Close
    conn.Close
    
    ' --- 4. FORMATTING AND PIVOT TABLE ---
    Dim lastRow As Long
    lastRow = xlSheet1.Cells(xlSheet1.Rows.Count, "A").End(-4162).Row ' xlUp

    ' Highlight rows
    For i = 2 To lastRow
        If xlSheet1.Cells(i, 6).Value = False Then ' Assumes RegisteredInIndia is Column F (the 6th column)
            xlSheet1.Range("A" & i).EntireRow.Interior.Color = RGB(255, 165, 0) ' Orange
        End If
    Next i
    xlSheet1.Columns.AutoFit

    ' Create Pivot Table
    Dim pCache As Object, pTable As Object
    Set xlSheet2 = xlBook.Sheets.Add(After:=xlSheet1)
    xlSheet2.Name = "PivotReport"
    Set pCache = xlBook.PivotCaches.Create(SourceType:=1, SourceData:=xlSheet1.Range("A1").CurrentRegion)
    Set pTable = pCache.CreatePivotTable(TableDestination:=xlSheet2.Range("A3"), TableName:="CompanyPivot")
    
    With pTable
        .PivotFields("Location").Orientation = 1 ' xlRowField
        .PivotFields("CRNNumber").Orientation = 4 ' xlDataField
        .PivotFields("CRNNumber").Function = -4112 ' xlCount
        .PivotFields("Count of CRNNumber").Name = "Count of Companies"
    End With

    ' --- 5. SAVE THE REPORT ---
    fileName = reportPath & "Companyreport_" & Format(reportDate, "dd-mmm-yyyy") & ".xlsx"
    If Dir(fileName) <> "" Then Kill fileName ' Delete old file if it exists
    
    xlBook.SaveAs fileName, 51 ' 51 = xlOpenXMLWorkbook (xlsx)

    ' --- 6. SEND EMAIL ---
    Set outlookApp = CreateObject("Outlook.Application")
    Set mailItem = outlookApp.CreateItem(0)

    With mailItem
        .To = "rsbdb@rbos.co.uk"
        .CC = "rsbdb@rbos.co.uk"
        .Subject = "Company Registration Details " & Format(reportDate, "dd-mmm-yyyy")
        .Body = "Hi Team," & vbCrLf & vbCrLf & _
                "Please find the company registration details for the close of business date " & Format(reportDate, "dd-mmm-yyyy") & "." & vbCrLf & vbCrLf & _
                "Thanks and Regards," & vbCrLf & "ABC Support Team"
        .Attachments.Add fileName
        .Display ' Use .Send to send automatically
    End With

    MsgBox "Report generated and email is ready to be sent!", vbInformation

Cleanup:
    On Error Resume Next ' Ignore errors during cleanup
    If Not rs Is Nothing Then If rs.State = 1 Then rs.Close
    If Not conn Is Nothing Then If conn.State = 1 Then conn.Close
    If Not xlBook Is Nothing Then xlBook.Close False
    If Not xlApp Is Nothing Then xlApp.Quit
    Set rs = Nothing: Set conn = Nothing
    Set xlSheet1 = Nothing: Set xlSheet2 = Nothing
    Set xlBook = Nothing: Set xlApp = Nothing
    Set mailItem = Nothing: Set outlookApp = Nothing
    Exit Sub

GenericErrHandler:
    MsgBox "An unexpected error occurred." & vbCrLf & _
           "Error Number: " & Err.Number & vbCrLf & _
           "Description: " & Err.Description, vbCritical, "Runtime Error"
    Resume Cleanup
End Sub

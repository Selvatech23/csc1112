Option Explicit

Sub ProcessReport_Combined_Optimized()

    '==================================================================================
    '===[ SETUP ]======================================================================
    '==================================================================================
    
    Application.ScreenUpdating = False ' Prevents screen flicker, speeds up macro
    
    Dim wsReport As Worksheet
    Set wsReport = ActiveSheet
    
    ' Define the header row once. Data starts on the next row (22).
    Const HeaderRow As Long = 21

    '==================================================================================
    '===[ STEP 1: PARSE AND PREPARE "GBCLM_REPORT" SHEET ]=============================
    '==================================================================================
    
    ' Action 1.1: Parse data in Column A using "|" as the delimiter
    wsReport.Columns("A:A").TextToColumns Destination:=wsReport.Range("A1"), _
                                      DataType:=xlDelimited, _
                                      TextQualifier:=xlDoubleQuote, _
                                      ConsecutiveDelimiter:=False, _
                                      Tab:=False, _
                                      Semicolon:=False, _
                                      Comma:=False, _
                                      Space:=False, _
                                      Other:=True, _
                                      OtherChar:="|"

    ' Action 1.2: Delete the first column of data after the split.
    wsReport.Columns("A:A").Delete
    
    ' Action 1.3: Autofit column widths
    wsReport.Cells.EntireColumn.AutoFit
    
    ' Action 1.4: Rename the worksheet to "GBCLM_REPORT"
    If wsReport.Name <> "GBCLM_REPORT" Then
        On Error Resume Next
        wsReport.Name = "GBCLM_REPORT"
        If Err.Number <> 0 Then
            MsgBox "Could not rename the sheet to 'GBCLM_REPORT'." & vbCrLf & _
                   "Another sheet may already have that name. Aborting macro.", vbCritical
            Err.Clear
            Application.ScreenUpdating = True
            Exit Sub
        End If
        On Error GoTo 0
    End If
    

    '==================================================================================
    '===[ STEP 2: CREATE "FEN Records" SHEET (OPTIMIZED) ]=============================
    '==================================================================================
    ' This new method uses AutoFilter. It is much faster and more reliable
    ' than copying row-by-row, and it prevents clipboard errors.
    
    Dim wsFEN As Worksheet
    Dim lastRow As Long
    Dim lastCol As Long
    Dim filterRange As Range
    Dim visibleData As Range
    
    ' Action 2.1: Prepare the "FEN Records" sheet (delete if it exists, then create new)
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Worksheets("FEN Records").Delete
    On Error GoTo 0
    Application.DisplayAlerts = True
    
    Set wsFEN = ThisWorkbook.Worksheets.Add(After:=wsReport)
    wsFEN.Name = "FEN Records"
    
    ' Action 2.2: Identify the full data range on the report sheet
    lastRow = wsReport.Cells(wsReport.Rows.Count, "A").End(xlUp).Row
    ' Find the last column based on the header row
    lastCol = wsReport.Cells(HeaderRow, wsReport.Columns.Count).End(xlToLeft).Column
    
    ' Check if there is data to filter
    If lastRow <= HeaderRow Then
        MsgBox "No data found below row 21 to filter.", vbInformation
        wsReport.Activate
        Application.ScreenUpdating = True
        Exit Sub
    End If
    
    ' Define the range to be filtered (includes headers and all data)
    Set filterRange = wsReport.Range(wsReport.Cells(HeaderRow, 1), wsReport.Cells(lastRow, lastCol))
    
    ' Action 2.3: Apply the filter
    wsReport.AutoFilterMode = False ' Clear any previous filters
    ' Filter on the 1st column of our range (Column A) for values starting with "FEN-"
    filterRange.AutoFilter Field:=1, Criteria1:="FEN-*"
    
    ' Action 2.4: Copy all visible (filtered) cells in ONE operation
    On Error Resume Next
    Set visibleData = filterRange.SpecialCells(xlCellTypeVisible)
    On Error GoTo 0
    
    If Not visibleData Is Nothing And visibleData.Rows.Count > 1 Then ' Check if more than just the header is visible
        ' This is the single, fast copy operation
        visibleData.Copy Destination:=wsFEN.Range("A1")
        wsFEN.Cells.EntireColumn.AutoFit ' Autofit the new sheet
    Else
        ' No "FEN-" records were found
        MsgBox "No records starting with 'FEN-' were found.", vbInformation
        Application.DisplayAlerts = False
        wsFEN.Delete ' Delete the empty sheet
        Application.DisplayAlerts = True
    End If
    
    ' Action 2.5: IMPORTANT - Always remove the filter from your source sheet
    wsReport.AutoFilterMode = False
    
    wsReport.Activate

    '==================================================================================
    '===[ FINISH ]=====================================================================
    '==================================================================================

    Application.ScreenUpdating = True
    MsgBox "Optimized process complete!" & vbCrLf & vbCrLf & _
           "Step 1: Data parsed on 'GBCLM_REPORT' sheet." & vbCrLf & _
           "Step 2: 'FEN Records' sheet created instantly.", vbInformation

End Sub

Option Explicit

Sub ProcessReport_Steps_1_to_5_Corrected()

    '==================================================================================
    '===[ SETUP ]======================================================================
    '==================================================================================
    
    Application.ScreenUpdating = False
    
    Dim reportWB As Workbook
    Set reportWB = ActiveWorkbook
    
    Dim wsReport As Worksheet
    Set wsReport = reportWB.ActiveSheet
    
    '==================================================================================
    '===[ STEP 1, 2, 3, 4 (ALL UNTOUCHED AND WORKING) ]=================================
    '==================================================================================
    
    '--- Step 1 ---
    wsReport.Columns("A:A").TextToColumns Destination:=wsReport.Range("A1"), _
                                      DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
                                      ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False, _
                                      Comma:=False, Space:=False, Other:=True, OtherChar:="|"
    wsReport.Columns("A:A").Delete
    wsReport.Cells.EntireColumn.AutoFit
    If wsReport.Name <> "GBCLM_REPORT" Then
        On Error Resume Next
        wsReport.Name = "GBCLM_REPORT"
        If Err.Number <> 0 Then
            MsgBox "Could not rename sheet.", vbCritical
            Err.Clear: Application.ScreenUpdating = True: Exit Sub
        End If
        On Error GoTo 0
    End If
    Set wsReport = reportWB.Worksheets("GBCLM_REPORT")

    '--- Step 2 ---
    Dim wsFEN As Worksheet
    Application.DisplayAlerts = False
    On Error Resume Next
    reportWB.Worksheets("FEN Records").Delete
    On Error GoTo 0
    Application.DisplayAlerts = True
    Set wsFEN = reportWB.Worksheets.Add(After:=wsReport)
    wsFEN.Name = "FEN Records"
    wsReport.Range("A21:E21").Copy Destination:=wsFEN.Range("A1")
    wsFEN.Cells.EntireColumn.AutoFit

    '--- Step 3 ---
    Dim lastRow As Long, filterRange As Range, dataToCopy As Range
    lastRow = wsReport.Cells(wsReport.Rows.Count, "A").End(xlUp).Row
    If lastRow > 21 Then
        Set filterRange = wsReport.Range("A21:E" & lastRow)
        wsReport.AutoFilterMode = False
        filterRange.AutoFilter Field:=1, Criteria1:="FEN-*"
        On Error Resume Next
        Set dataToCopy = filterRange.Offset(1, 0).SpecialCells(xlCellTypeVisible)
        On Error GoTo 0
        If Not dataToCopy Is Nothing Then
            dataToCopy.Copy Destination:=wsFEN.Range("A2")
            wsFEN.Cells.EntireColumn.AutoFit
        Else
            wsFEN.Range("A2").Value = "No 'FEN-' records were found."
        End If
        wsReport.AutoFilterMode = False
    End If

    '--- Step 4 ---
    wsReport.Range("C2").Value = "Total Number of Individual Customers in Fenergo Database"
    wsReport.Range("C3").Value = "Total No. of Customers Excluded from Screening from Fenergo Database"
    wsReport.Range("C4").Value = "1 CIS with only existing inflight NCTO/RRA Reason. No valid review"
    wsReport.Range("C5").Value = "02 CIS with only existing Cancelled. Reason: No valid review"
    wsReport.Range("C6").Value = "3. Unassigned / No review exist(s)"
    wsReport.Range("C7").Value = "4. Technical Issue(s) occurred in Fenergo Database"
    wsReport.Range("C8").Value = "Total No. of Customers Sent to Screening from Fenergo Database"
    wsReport.Range("C9").Value = "Difference Between Total and Combination of Excluded & Included"
    wsReport.Range("C11").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Today's report)"
    wsReport.Range("C12").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Previous day report)"
    wsReport.Range("C13").Value = "Change in no. of Customers Excluded from Screening"
    wsReport.Range("C14").Value = "Change in no of Customers Excluded from Screening (In Percentage)"
    wsReport.Range("C16").Value = "Total Number of Individual Customers in Fenergo Database (In Today's report)"
    wsReport.Range("C17").Value = "Total Number of Individual Customers in Fenergo Database (In Previous day report)"
    wsReport.Range("C18").Value = "Net Change in Total Number of Individual Customers"
    wsReport.Columns("C:C").AutoFit
    

    '==================================================================================
    '===[ STEP 5: CREATE "UNIQUE CIS" SHEET (BASED ON YOUR RECORDED MACRO) ]===========
    '==================================================================================
    ' This new code follows the exact, proven logic from your recorded macro.
    
    Dim wsUniqueCIS As Worksheet
    Dim sourceRange As Range
    Dim uniqueLastRow As Long
    
    ' Only proceed if there is data to process
    If lastRow > 21 Then
        ' Action 5.1: Create the "Unique CIS" sheet
        Application.DisplayAlerts = False
        On Error Resume Next
        reportWB.Worksheets("Unique CIS").Delete
        On Error GoTo 0
        Application.DisplayAlerts = True
        Set wsUniqueCIS = reportWB.Worksheets.Add(After:=wsFEN)
        wsUniqueCIS.Name = "Unique CIS"

        ' Action 5.2: Copy the source data from GBCLM_REPORT (A22 to last row)
        Set sourceRange = wsReport.Range("A22:A" & lastRow)
        sourceRange.Copy Destination:=wsUniqueCIS.Range("A1")
        
        ' Find the last row of the data we just pasted onto the new sheet
        uniqueLastRow = wsUniqueCIS.Cells(wsUniqueCIS.Rows.Count, "A").End(xlUp).Row
        
        ' Action 5.3: Replace "fen-" with nothing (case-insensitive)
        wsUniqueCIS.Columns("A:A").Replace What:="fen-", Replacement:="", LookAt:=xlPart, MatchCase:=False
        
        ' Action 5.4: Use a helper column to TRIM the data (just like your macro)
        ' This is a robust way to clean the data before removing duplicates
        With wsUniqueCIS.Range("B1:B" & uniqueLastRow)
            .Formula = "=TRIM(A1)"
            ' Convert the formulas to their values
            .Value = .Value
        End With
        
        ' Action 5.5: Overwrite the original column with the cleaned data, then delete the helper column
        wsUniqueCIS.Range("A1:A" & uniqueLastRow).Value = wsUniqueCIS.Range("B1:B" & uniqueLastRow).Value
        wsUniqueCIS.Columns("B").Delete
        
        ' Action 5.6: Remove duplicates from the now-clean Column A
        wsUniqueCIS.Columns("A:A").RemoveDuplicates Columns:=1, Header:=xlNo
        
        ' Action 5.7: Insert a new row at the top for the header
        wsUniqueCIS.Rows("1:1").Insert Shift:=xlDown
        
        ' Action 5.8: Add and format the final header
        With wsUniqueCIS.Range("A1")
            .Value = "CIS CODE"
            .Interior.Color = RGB(173, 216, 230) ' Light Blue
        End With
        
        ' Action 5.9: Autofit and activate the sheet
        wsUniqueCIS.Columns("A:A").AutoFit
        wsUniqueCIS.Activate
    Else
        ' In case there was no data on the GBCLM_REPORT sheet to begin with
        MsgBox "No data found on GBCLM_REPORT sheet to create the 'Unique CIS' list.", vbInformation
    End If


    '==================================================================================
    '===[ FINISH ]=====================================================================
    '==================================================================================

    Application.ScreenUpdating = True
    MsgBox "Process complete! All 5 steps executed successfully.", vbInformation

End Sub

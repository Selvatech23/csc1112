Option Explicit

Sub ProcessReport_Steps_1_to_7_Auto()

    '==================================================================================
    '===[ SETUP ]======================================================================
    '==================================================================================
    
    Application.ScreenUpdating = False
    
    Dim reportWB As Workbook, macroWB As Workbook
    Set reportWB = ActiveWorkbook
    Set macroWB = ThisWorkbook ' The workbook where this code is saved
    
    Dim wsReport As Worksheet, wsFEN As Worksheet, wsUniqueCIS As Worksheet, wsPivot As Worksheet
    Set wsReport = reportWB.ActiveSheet
    
    Dim lastRow As Long

    '==================================================================================
    '===[ STEP 1-6 (ALL UNTOUCHED AND WORKING) ]=======================================
    '==================================================================================

    '--- Step 1 ---
    wsReport.Columns("A:A").TextToColumns Destination:=wsReport.Range("A1"), _
                                      DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
                                      ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False, _
                                      Comma:=False, Space:=False, Other:=True, OtherChar:="|"
    wsReport.Columns("A:A").Delete
    wsReport.Cells.EntireColumn.AutoFit
    If wsReport.Name <> "GBCLM_REPORT" Then
        On Error Resume Next
        wsReport.Name = "GBCLM_REPORT"
        If Err.Number <> 0 Then MsgBox "Could not rename sheet.", vbCritical: Err.Clear: Application.ScreenUpdating = True: Exit Sub
        On Error GoTo 0
    End If
    Set wsReport = reportWB.Worksheets("GBCLM_REPORT")

    '--- Step 2 ---
    Application.DisplayAlerts = False: On Error Resume Next
    reportWB.Worksheets("FEN Records").Delete
    On Error GoTo 0: Application.DisplayAlerts = True
    Set wsFEN = reportWB.Worksheets.Add(After:=wsReport)
    wsFEN.Name = "FEN Records"
    wsReport.Range("A21:E21").Copy wsFEN.Range("A1")
    wsFEN.Cells.EntireColumn.AutoFit

    '--- Step 3 ---
    Dim filterRange As Range, dataToCopy As Range
    lastRow = wsReport.Cells(wsReport.Rows.Count, "A").End(xlUp).Row
    If lastRow > 21 Then
        Set filterRange = wsReport.Range("A21:E" & lastRow)
        wsReport.AutoFilterMode = False
        filterRange.AutoFilter Field:=1, Criteria1:="FEN-*"
        On Error Resume Next
        Set dataToCopy = filterRange.Offset(1, 0).SpecialCells(xlCellTypeVisible)
        On Error GoTo 0
        If Not dataToCopy Is Nothing Then dataToCopy.Copy wsFEN.Range("A2"): wsFEN.Cells.EntireColumn.AutoFit
        wsReport.AutoFilterMode = False
    End If

    '--- Step 4 ---
    wsReport.Range("C2").Value = "Total Number of Individual Customers in Fenergo Database"
    wsReport.Range("C3").Value = "Total No. of Customers Excluded from Screening from Fenergo Database"
    wsReport.Range("C4").Value = "1 CIS with only existing inflight NCTO/RRA Reason. No valid review"
    wsReport.Range("C5").Value = "02 CIS with only existing Cancelled. Reason: No valid review"
    wsReport.Range("C6").Value = "3. Unassigned / No review exist(s)"
    wsReport.Range("C7").Value = "4. Technical Issue(s) occurred in Fenergo Database"
    wsReport.Range("C8").Value = "Total No. of Customers Sent to Screening from Fenergo Database"
    wsReport.Range("C9").Value = "Difference Between Total and Combination of Excluded & Included"
    wsReport.Range("C11").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Today's report)"
    wsReport.Range("C12").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Previous day report)"
    wsReport.Range("C13").Value = "Change in no. of Customers Excluded from Screening"
    wsReport.Range("C14").Value = "Change in no of Customers Excluded from Screening (In Percentage)"
    wsReport.Range("C16").Value = "Total Number of Individual Customers in Fenergo Database (In Today's report)"
    wsReport.Range("C17").Value = "Total Number of Individual Customers in Fenergo Database (In Previous day report)"
    wsReport.Range("C18").Value = "Net Change in Total Number of Individual Customers"
    wsReport.Columns("C:C").AutoFit
    
    '--- Step 5 ---
    If lastRow > 21 Then
        Dim sourceRange As Range, uniqueLastRow As Long
        Application.DisplayAlerts = False: On Error Resume Next
        reportWB.Worksheets("Unique CIS").Delete
        On Error GoTo 0: Application.DisplayAlerts = True
        Set wsUniqueCIS = reportWB.Worksheets.Add(After:=wsFEN)
        wsUniqueCIS.Name = "Unique CIS"
        Set sourceRange = wsReport.Range("A22:A" & lastRow)
        sourceRange.Copy wsUniqueCIS.Range("A1")
        uniqueLastRow = wsUniqueCIS.Cells(wsUniqueCIS.Rows.Count, "A").End(xlUp).Row
        wsUniqueCIS.Columns("A:A").Replace What:="fen-", Replacement:="", LookAt:=xlPart, MatchCase:=False
        With wsUniqueCIS.Range("B1:B" & uniqueLastRow): .Formula = "=TRIM(A1)": .Value = .Value: End With
        wsUniqueCIS.Range("A1:A" & uniqueLastRow).Value = wsUniqueCIS.Range("B1:B" & uniqueLastRow).Value
        wsUniqueCIS.Columns("B").Delete: wsUniqueCIS.Columns("A:A").RemoveDuplicates Columns:=1, Header:=xlNo
        wsUniqueCIS.Rows("1:1").Insert Shift:=xlDown
        With wsUniqueCIS.Range("A1"): .Value = "CIS CODE": .Interior.Color = RGB(173, 216, 230): End With
        wsUniqueCIS.Columns("A:A").AutoFit
    End If
    
    '--- Step 6 ---
    Dim pvtCache As PivotCache, pvtTable As PivotTable, pvtSourceRange As Range
    Application.DisplayAlerts = False: On Error Resume Next
    reportWB.Worksheets("Analysis").Delete
    On Error GoTo 0: Application.DisplayAlerts = True
    Set wsPivot = reportWB.Worksheets.Add(After:=reportWB.Sheets(reportWB.Sheets.Count))
    wsPivot.Name = "Analysis"
    Set pvtSourceRange = wsReport.Range("A21:E" & lastRow)
    Set pvtCache = reportWB.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=pvtSourceRange, Version:=8)
    Set pvtTable = pvtCache.CreatePivotTable(TableDestination:=wsPivot.Range("A3"), TableName:="AnalysisPivot", Version:=8)
    With pvtTable
        .PivotFields(" CIS CODE ").Orientation = xlRowField
        .PivotFields(" REVIEW STATUS ").Orientation = xlRowField
        .PivotFields(" SENT ? (Yes/No)").Orientation = xlRowField
        .PivotFields(" REASON").Orientation = xlRowField
        .AddDataField .PivotFields(" CIS CODE "), "Count of  CIS CODE ", xlCount
        .PivotFields(" SENT ? (Yes/No)").Orientation = xlColumnField
        .RepeatAllLabels xlRepeatLabels: .RowAxisLayout xlCompactRow
    End With
    
    '==================================================================================
    '===[ STEP 7: POPULATE DATA (FETCHING PATH FROM 'Home' SHEET) ]====================
    '==================================================================================
    
    Dim prevDayValueC2 As Variant, prevDayValueC3 As Variant
    prevDayValueC2 = 0 ' Default value
    prevDayValueC3 = 0 ' Default value
    
    '--- Part 1: Get path from 'Home' sheet and fetch data ---
    Dim folderPath As String, prevDayPath As String, prevDayDate As Date, prevDayWB As Workbook, wsHome As Worksheet
    
    On Error Resume Next
    Set wsHome = macroWB.Worksheets("Home")
    On Error GoTo 0
    
    If wsHome Is Nothing Then
        MsgBox "Configuration Error:" & vbCrLf & "A sheet named 'Home' was not found in the macro workbook.", vbCritical
    Else
        folderPath = wsHome.Range("E10").Value
        If folderPath = "" Then
            MsgBox "Configuration Error:" & vbCrLf & "Cell E10 on the 'Home' sheet is empty. Please provide a folder path.", vbExclamation
        Else
            ' Check if the last character is a backslash, add it if not.
            If Right(folderPath, 1) <> "\" Then folderPath = folderPath & "\"
            
            prevDayDate = Date - 1
            Do While Weekday(prevDayDate, vbMonday) > 5
                prevDayDate = prevDayDate - 1
            Loop
            
            prevDayPath = folderPath & Format(prevDayDate, "ddmmyyyy") & ".xlsx"
            
            If Dir(prevDayPath) <> "" Then
                Set prevDayWB = Workbooks.Open(prevDayPath, ReadOnly:=True)
                prevDayValueC2 = prevDayWB.Worksheets("GBCLM_REPORT").Range("G2").Value
                prevDayValueC3 = prevDayWB.Worksheets("GBCLM_REPORT").Range("G3").Value
                prevDayWB.Close SaveChanges:=False
            Else
                MsgBox "File Not Found:" & vbCrLf & "Could not find the previous day's report at:" & vbCrLf & prevDayPath, vbExclamation
            End If
        End If
    End If

    '--- Part 2: Populate Column G in the GBCLM_REPORT sheet ---
    Dim fenLastRow As Long, fenSentCol As String
    fenLastRow = wsFEN.Cells(wsFEN.Rows.Count, "A").End(xlUp).Row
    fenSentCol = "D" ' Assuming "SENT ? (Yes/No)" is in column D of FEN Records
    
    With wsReport
        .Range("G2").Formula = "=COUNTA('FEN Records'!A2:A" & fenLastRow & ")"
        .Range("G3").Formula = "=COUNTIF('FEN Records'!" & fenSentCol & ":" & fenSentCol & ",""No"")"
        .Range("G4").Formula = "=COUNTIF('FEN Records'!" & fenSentCol & ":" & fenSentCol & ",""No"")"
        .Range("G5").Value = 0
        .Range("G6").Value = 0
        .Range("G7").Value = 0
        .Range("G8").Formula = "=COUNTIF('FEN Records'!" & fenSentCol & ":" & fenSentCol & ",""Yes"")"
        .Range("G9").Formula = "=G2-(G3+G8)"
        .Range("G11").Formula = "=G3"
        .Range("G12").Value = prevDayValueC3
        .Range("G13").Formula = "=G11-G12"
        .Range("G14").Formula = "=IFERROR(G13/G11,0)" ' Better way to prevent divide-by-zero
        .Range("G14").NumberFormat = "0.00%"
        .Range("G16").Formula = "=G2"
        .Range("G17").Value = prevDayValueC2
        .Range("G18").Formula = "=G16-G17"
        .Columns("G:G").AutoFit
        .Activate
    End With
    
    '==================================================================================
    '===[ FINISH ]=====================================================================
    '==================================================================================
    
    Application.ScreenUpdating = True
    MsgBox "Process complete! All 7 steps executed successfully.", vbInformation

End Sub

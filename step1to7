Option Explicit

Sub ProcessReport_Final_With_New_Step7()

    '==================================================================================
    '===[ SETUP ]======================================================================
    '==================================================================================
    
    Application.ScreenUpdating = False
    
    Dim reportWB As Workbook
    Set reportWB = ActiveWorkbook
    
    Dim wsReport As Worksheet, wsFEN As Worksheet, wsUniqueCIS As Worksheet, wsPivot As Worksheet
    Set wsReport = reportWB.ActiveSheet
    
    Dim lastRow As Long

    '==================================================================================
    '===[ STEPS 1-6 (ALL UNTOUCHED AND WORKING) ]======================================
    '==================================================================================

    '--- Step 1 ---
    wsReport.Columns("A:A").TextToColumns Destination:=wsReport.Range("A1"), _
                                      DataType:=xlDelimited, TextQualifier:=xlDoubleQuote, _
                                      ConsecutiveDelimiter:=False, Tab:=False, Semicolon:=False, _
                                      Comma:=False, Space:=False, Other:=True, OtherChar:="|"
    wsReport.Columns("A:A").Delete
    wsReport.Cells.EntireColumn.AutoFit
    If wsReport.Name <> "GBCLM_REPORT" Then
        On Error Resume Next
        wsReport.Name = "GBCLM_REPORT"
        If Err.Number <> 0 Then MsgBox "Could not rename sheet.", vbCritical: Err.Clear: Application.ScreenUpdating = True: Exit Sub
        On Error GoTo 0
    End If
    Set wsReport = reportWB.Worksheets("GBCLM_REPORT")

    '--- Step 2 ---
    Application.DisplayAlerts = False: On Error Resume Next
    reportWB.Worksheets("FEN Records").Delete
    On Error GoTo 0: Application.DisplayAlerts = True
    Set wsFEN = reportWB.Worksheets.Add(After:=wsReport)
    wsFEN.Name = "FEN Records"
    wsReport.Range("A21:E21").Copy wsFEN.Range("A1")
    wsFEN.Cells.EntireColumn.AutoFit

    '--- Step 3 ---
    Dim filterRange As Range, dataToCopy As Range
    lastRow = wsReport.Cells(wsReport.Rows.Count, "A").End(xlUp).Row
    If lastRow > 21 Then
        Set filterRange = wsReport.Range("A21:E" & lastRow)
        wsReport.AutoFilterMode = False
        filterRange.AutoFilter Field:=1, Criteria1:="FEN-*"
        On Error Resume Next
        Set dataToCopy = filterRange.Offset(1, 0).SpecialCells(xlCellTypeVisible)
        On Error GoTo 0
        If Not dataToCopy Is Nothing Then dataToCopy.Copy wsFEN.Range("A2"): wsFEN.Cells.EntireColumn.AutoFit
        wsReport.AutoFilterMode = False
    End If

    '--- Step 4 ---
    wsReport.Range("C2").Value = "Total Number of Individual Customers in Fenergo Database"
    wsReport.Range("C3").Value = "Total No. of Customers Excluded from Screening from Fenergo Database"
    wsReport.Range("C4").Value = "1 CIS with only existing inflight NCTO/RRA Reason. No valid review"
    wsReport.Range("C5").Value = "02 CIS with only existing Cancelled. Reason: No valid review"
    wsReport.Range("C6").Value = "3. Unassigned / No review exist(s)"
    wsReport.Range("C7").Value = "4. Technical Issue(s) occurred in Fenergo Database"
    wsReport.Range("C8").Value = "Total No. of Customers Sent to Screening from Fenergo Database"
    wsReport.Range("C9").Value = "Difference Between Total and Combination of Excluded & Included"
    wsReport.Range("C11").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Today's report)"
    wsReport.Range("C12").Value = "No. of Customers Excluded from Screening from Fenergo Database (In Previous day report)"
    wsReport.Range("C13").Value = "Change in no. of Customers Excluded from Screening"
    wsReport.Range("C14").Value = "Change in no of Customers Excluded from Screening (In Percentage)"
    wsReport.Range("C16").Value = "Total Number of Individual Customers in Fenergo Database (In Today's report)"
    wsReport.Range("C17").Value = "Total Number of Individual Customers in Fenergo Database (In Previous day report)"
    wsReport.Range("C18").Value = "Net Change in Total Number of Individual Customers"
    wsReport.Columns("C:C").AutoFit
    
    '--- Step 5 ---
    If lastRow > 21 Then
        Dim sourceRange As Range, uniqueLastRow As Long
        Application.DisplayAlerts = False: On Error Resume Next
        reportWB.Worksheets("Unique CIS").Delete
        On Error GoTo 0: Application.DisplayAlerts = True
        Set wsUniqueCIS = reportWB.Worksheets.Add(After:=wsFEN)
        wsUniqueCIS.Name = "Unique CIS"
        Set sourceRange = wsReport.Range("A22:A" & lastRow)
        sourceRange.Copy wsUniqueCIS.Range("A1")
        uniqueLastRow = wsUniqueCIS.Cells(wsUniqueCIS.Rows.Count, "A").End(xlUp).Row
        wsUniqueCIS.Columns("A:A").Replace What:="fen-", Replacement:="", LookAt:=xlPart, MatchCase:=False
        With wsUniqueCIS.Range("B1:B" & uniqueLastRow): .Formula = "=TRIM(A1)": .Value = .Value: End With
        wsUniqueCIS.Range("A1:A" & uniqueLastRow).Value = wsUniqueCIS.Range("B1:B" & uniqueLastRow).Value
        wsUniqueCIS.Columns("B").Delete: wsUniqueCIS.Columns("A:A").RemoveDuplicates Columns:=1, Header:=xlNo
        wsUniqueCIS.Rows("1:1").Insert Shift:=xlDown
        With wsUniqueCIS.Range("A1"): .Value = "CIS CODE": .Interior.Color = RGB(173, 216, 230): End With
        wsUniqueCIS.Columns("A:A").AutoFit
    End If
    
    '--- Step 6 ---
    Dim pvtCache As PivotCache, pvtTable As PivotTable, pvtSourceRange As Range
    Application.DisplayAlerts = False: On Error Resume Next
    reportWB.Worksheets("Analysis").Delete
    On Error GoTo 0: Application.DisplayAlerts = True
    Set wsPivot = reportWB.Worksheets.Add(After:=reportWB.Sheets(reportWB.Sheets.Count))
    wsPivot.Name = "Analysis"
    Set pvtSourceRange = wsReport.Range("A21:E" & lastRow)
    Set pvtCache = reportWB.PivotCaches.Create(SourceType:=xlDatabase, SourceData:=pvtSourceRange, Version:=8)
    Set pvtTable = pvtCache.CreatePivotTable(TableDestination:=wsPivot.Range("A3"), TableName:="AnalysisPivot", Version:=8)
    With pvtTable
        .PivotFields(" CIS CODE ").Orientation = xlRowField
        .PivotFields(" REVIEW STATUS ").Orientation = xlRowField
        .PivotFields(" SENT ? (Yes/No)").Orientation = xlRowField
        .PivotFields(" REASON").Orientation = xlRowField
        .AddDataField .PivotFields(" CIS CODE "), "Count of  CIS CODE ", xlCount
        .PivotFields(" SENT ? (Yes/No)").Orientation = xlColumnField
        .RepeatAllLabels xlRepeatLabels: .RowAxisLayout xlCompactRow
    End With
    
    '==================================================================================
    '===[ NEW STEP 7: CREATE "Space issue" SHEET & VLOOKUP ]===========================
    '==================================================================================
    
    Dim wsSpace As Worksheet
    Dim spaceSourceRange As Range
    Dim spaceLastRow As Long
    
    ' Action 7.1: Create the "Space issue" sheet
    Application.DisplayAlerts = False
    On Error Resume Next
    reportWB.Worksheets("Space issue").Delete
    On Error GoTo 0
    Application.DisplayAlerts = True
    
    Set wsSpace = reportWB.Worksheets.Add(After:=reportWB.Sheets(reportWB.Sheets.Count))
    wsSpace.Name = "Space issue"
    
    ' Action 7.2: Copy data from GBCLM_REPORT (A22 to last row)
    If lastRow > 21 Then
        Set spaceSourceRange = wsReport.Range("A22:A" & lastRow)
        spaceSourceRange.Copy Destination:=wsSpace.Range("A1")
        
        ' Action 7.3: Clean the data on the new sheet
        With wsSpace.Columns("A:A")
            .Replace What:="FEN-", Replacement:="", LookAt:=xlPart, MatchCase:=False
            .RemoveDuplicates Columns:=1, Header:=xlNo
        End With
        
        ' Action 7.4: Ask user to select the VLOOKUP source file
        MsgBox "You will now be asked to select the file to use for the VLOOKUP.", vbInformation, "Select VLOOKUP Source File"
        
        Dim fDialog As FileDialog, lookupFilePath As String, lookupFileName As String
        Set fDialog = Application.FileDialog(msoFileDialogFilePicker)
        fDialog.Title = "Please Select the VLOOKUP Source File (e.g., 25062025.xlsm)"
        fDialog.Filters.Clear
        fDialog.Filters.Add "Excel Files", "*.xlsx; *.xls; *.xlsm"
        
        If fDialog.Show = -1 Then ' User selected a file
            lookupFilePath = fDialog.SelectedItems(1)
            ' Extract just the file name from the full path
            lookupFileName = Mid(lookupFilePath, InStrRev(lookupFilePath, "\") + 1)
            
            ' Action 7.5: Add header and VLOOKUP formula
            wsSpace.Range("B1").Value = "STATUS"
            
            spaceLastRow = wsSpace.Cells(wsSpace.Rows.Count, "A").End(xlUp).Row
            If spaceLastRow > 1 Then
                Dim vlookupRange As Range
                Set vlookupRange = wsSpace.Range("B2:B" & spaceLastRow)
                
                ' NOTE: Your macro recorded a lookup range of C1:C2. This is usually too small.
                ' I am using C:D as it is more common for a VLOOKUP. Change if needed.
                vlookupRange.Formula = "=IFERROR(VLOOKUP(A2,'[" & lookupFileName & "]Space issue'!C:D,2,FALSE),""Not Found"")"
                
                ' Convert formulas to values to break the link to the other file
                vlookupRange.Value = vlookupRange.Value
            End If
        Else
            ' User cancelled the file selection
            wsSpace.Range("B1").Value = "STATUS (VLOOKUP cancelled)"
        End If
        
        ' Action 7.6: Autofit the columns
        wsSpace.Cells.EntireColumn.AutoFit
        wsSpace.Activate
    End If
    

    '==================================================================================
    '===[ FINISH ]=====================================================================
    '==================================================================================
    
    Application.ScreenUpdating = True
    MsgBox "Process complete! All steps, including the new Step 7, executed successfully.", vbInformation

End Sub
